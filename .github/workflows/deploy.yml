name: Build and Deploy to DigitalOcean (rsync)

on:
  push:
    branches:
      - main

env:
  # You provided these values â€” they are hardcoded here for convenience.
  DO_HOST: 139.59.30.89
  DO_USER: deployer
  DO_REMOTE_PATH: /var/www/upskill.gyannidhi.in/demo1
  NODE_VERSION: '20'   # change if you need a different node version

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build (Vite)
        run: npm run build

      - name: Ensure rsync is installed
        run: sudo apt-get update && sudo apt-get install -y rsync

      - name: Start ssh-agent and add private key (from secret DO_SSH_KEY)
        uses: webfactory/ssh-agent@v0.8.1
        with:
          ssh-private-key: ${{ secrets.DO_SSH_KEY }}

      - name: Create remote directory (if missing) and set perms
        run: |
          SSH_PORT=${{ secrets.DO_PORT || '22' }}
          ssh -o StrictHostKeyChecking=no -p $SSH_PORT ${{ env.DO_USER }}@${{ env.DO_HOST }} "mkdir -p '${{ env.DO_REMOTE_PATH }}' && chmod 0755 '${{ env.DO_REMOTE_PATH }}'"

      - name: Deploy dist/ to DigitalOcean (rsync)
        run: |
          SSH_PORT=${{ secrets.DO_PORT || '22' }}
          # Sync contents of ./dist/ into remote path (deletes removed files)
          rsync -avz --delete -e "ssh -p $SSH_PORT -o StrictHostKeyChecking=no" ./dist/ ${{ env.DO_USER }}@${{ env.DO_HOST }}:${{ env.DO_REMOTE_PATH }}

      - name: (Optional) Reload nginx on remote (uncomment if needed)
        if: always()
        run: |
          SSH_PORT=${{ secrets.DO_PORT || '22' }}
          # Uncomment the next line if the deploy user has sudo rights and you want nginx reloaded
          # ssh -o StrictHostKeyChecking=no -p $SSH_PORT ${{ env.DO_USER }}@${{ env.DO_HOST }} "sudo systemctl reload nginx || true"
          echo "Deployed to ${{ env.DO_HOST }}:${{ env.DO_REMOTE_PATH }}"
